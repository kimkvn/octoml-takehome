{"version":3,"sources":["logo.svg","components/HardwareTargetItem.js","components/HardwareTargets.js","components/BenchmarkAccordion.js","components/AccelerateAccordion.js","components/TotalRuns.js","screens/Home.js","screens/Benchmarks.js","App.js","reportWebVitals.js","index.js"],"names":["_path","useStyles","makeStyles","targetsHeader","display","justifyContent","listItemDropdown","width","HardwareTargetItem","targetData","allTargets","unavailableInstances","handleUpdateTarget","deleteItem","disableDelete","id","provider","instance","classes","providerDropdown","React","createRef","instanceDropdown","instanceIsDisabled","includes","ListItem","Grid","container","spacing","alignItems","item","md","FormControl","variant","ref","className","Select","labelId","value","onChange","event","target","cpu","memory","MenuItem","disabled","Object","keys","map","instances","Button","onClick","listHeaders","padding","targetsHeaderText","fontSize","listItem","HardwareTargets","hardwareTargets","allInstances","updateCurrentTargets","useState","canAddTarget","setCanAddTarget","setUnavailableInstances","currentTargets","setCurrentTargets","useEffect","checkCanAddTarget","updateUnavailableInstances","handleUpdateCurrentTargets","newTargets","validTargets","filter","i","length","newInstances","handleDeleteTarget","color","Divider","List","accordionSummary","flexDirection","benchmarkDropdown","BenchmarkAccordion","hardwareData","updateBenchmarkOptions","confirmBenchmarkRequest","checked","setChecked","benchmarkEngine","setBenchmarkEngine","numberOfTrials","setNumberOfTrials","runsPerTrial","setRunsPerTrial","errorNumberOfTrials","setErrorNumberOfTrials","errorRunsPerTrial","setErrorRunsPerTrial","hardwareTarget","setHardwareTarget","handleUpdateBenchmarkOptions","engine","hardware","num_trials","runs_per_trial","Accordion","AccordionSummary","expandIcon","FormControlLabel","control","Checkbox","stopPropagation","name","AccordionDetails","InputLabel","htmlFor","label","TextField","error","helperText","count","match","theme","accelerateDropdown","AccelerateAccordion","updateAccelerateOptions","formData","confirmAccelerateRequest","setEngine","showKernelTrials","setShowKernelTrials","benchmarkError","setBenchmarkError","newData","newEngine","toUpperCase","trialCount","TVM","kernel_trials","handleSetKernelTrials","totalRunsCard","totalRunsHeader","totalRunsSubHeaderText","fontWeight","margin","totalRunsValue","totalRunsItem","targetInfoCore","targetRunValue","totalRunsTargetInfo","totalRunsGreen","totalRunsButton","TotalRuns","runBenchmark","runAcceleration","clickOctomize","Card","clsx","url","box","targetsListSection","initialBenchmarkFormData","initialAccelerateFormData","Home","isLoading","setLoading","rawHardwareData","setRawHardwareData","setHardwareTargets","setAllInstances","requestBenchmark","setRequestBenchmark","requestAcceleration","setRequestAcceleration","benchmarkOptions","setBenchmarkOptions","accelerateOptions","setAccelerateOptions","fetchHardwareTargets","a","fetch","method","res","json","console","log","data","final","addProviderInstance","prevInstances","forEach","assembleHardwareTargetsData","body","JSON","stringify","headers","mode","Box","CardHeader","title","CardContent","bool","postOctomize","Benchmarks","_excluded","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","props","height","viewBox","fill","xmlns","fillRule","clipRule","d","ForwardRef","drawerWidth","root","octoLogo","marginLeft","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","flexGrow","background","App","open","Drawer","paper","to","button","ListItemIcon","ListItemText","primary","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e68d764.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 30,\n    viewBox: \"0 0 24 30\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M12 3.87311C8.03815 3.87311 4.82644 7.09045 4.82644 11.0592C4.82644 11.9333 4.83906 12.3 4.94499 12.7109C5.05466 13.1363 5.29196 13.6985 5.92166 14.8144C6.13573 15.1937 6.73703 15.9388 7.68317 16.9641C8.58839 17.9451 9.69818 19.0659 10.8117 20.1592C11.9228 21.2502 13.0258 22.3022 13.9141 23.1444C14.1389 23.3576 14.3527 23.5598 14.5505 23.747C15.1173 24.2832 15.5537 24.6961 15.7472 24.89C16.6204 25.7648 17.2452 26.1269 17.9835 26.1269C19.4806 26.1269 20.6942 24.9112 20.6942 23.4114C20.6942 22.8419 20.521 22.3578 20.1817 21.8882C19.6465 21.1474 19.812 20.1122 20.5515 19.576C21.291 19.0399 22.3244 19.2057 22.8596 19.9465C23.5602 20.9161 24 22.0685 24 23.4114C24 26.7401 21.3063 29.4385 17.9835 29.4385C15.8904 29.4385 14.4535 28.2774 13.4095 27.2315C13.252 27.0737 12.8762 26.718 12.336 26.207C12.1279 26.0101 11.8955 25.7901 11.6417 25.5495C10.7486 24.7028 9.62939 23.6354 8.49768 22.5242C7.36826 21.4153 6.21447 20.2511 5.25565 19.212C4.33774 18.2173 3.47454 17.2072 3.04388 16.4441C2.38411 15.2749 1.9668 14.4023 1.74423 13.539C1.52059 12.6715 1.52062 11.9037 1.52066 11.0886L1.52066 11.0592C1.52066 5.26151 6.21241 0.561523 12 0.561523C17.7876 0.561523 22.4793 5.26151 22.4793 11.0592C22.4793 13.0752 21.9104 14.9631 20.9239 16.5649C20.6234 17.0527 20.0943 17.6667 19.5777 18.2315C19.0307 18.8293 18.3912 19.4854 17.7888 20.088C17.1845 20.6926 16.6079 21.253 16.183 21.6618C15.9703 21.8664 15.795 22.0335 15.6726 22.1498C15.6114 22.208 15.5633 22.2535 15.5304 22.2846C15.5139 22.3002 15.5012 22.3122 15.4925 22.3204L15.4798 22.3324L15.479 22.3331L15.4788 22.3333C15.4788 22.3333 15.4787 22.3334 14.3471 21.1265C13.2156 19.9195 13.2155 19.9195 13.2155 19.9195L13.216 19.9191L13.2267 19.909C13.2345 19.9017 13.2462 19.8906 13.2617 19.8759C13.2928 19.8466 13.3388 19.803 13.3978 19.7469C13.516 19.6347 13.6862 19.4723 13.8934 19.2731C14.3081 18.8741 14.8684 18.3295 15.4528 17.7448C16.0392 17.1583 16.6404 16.5408 17.1406 15.994C17.6712 15.414 17.9959 15.0122 18.1105 14.826C18.7844 13.7319 19.1736 12.4436 19.1736 11.0592C19.1736 7.09045 15.9618 3.87311 12 3.87311ZM3.4485 19.576C4.18798 20.1122 4.35354 21.1474 3.81828 21.8882C3.47896 22.3578 3.30578 22.8419 3.30578 23.4114C3.30578 24.9112 4.51943 26.1269 6.01653 26.1269C6.73742 26.1269 7.42276 25.7544 8.48412 24.6912L10.8217 27.0328C9.63509 28.2215 8.12707 29.4385 6.01653 29.4385C2.69369 29.4385 0 26.7401 0 23.4114C0 22.0685 0.439815 20.9161 1.14039 19.9465C1.67565 19.2057 2.70902 19.0399 3.4485 19.576Z\",\n    fill: \"#0180FF\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.4a2887e3.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport { makeStyles, Grid } from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles(() => ({\n  targetsHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  listItemDropdown: {\n    width: \"100%\",\n  },\n}));\n\nconst HardwareTargetItem = ({\n  targetData,\n  allTargets,\n  unavailableInstances,\n  handleUpdateTarget,\n  deleteItem,\n  disableDelete,\n}) => {\n  const { id, provider, instance } = targetData;\n  const classes = useStyles();\n\n  const providerDropdown = React.createRef();\n  const instanceDropdown = React.createRef();\n\n  const handleSetProvider = (event) =>\n    handleUpdateTarget({\n      id,\n      provider: event.target.value,\n      instance: \"\",\n      cpu: 0,\n      memory: 0,\n    });\n\n  const handleSetInstance = (event) => {\n    const instance = event.target.value;\n    handleUpdateTarget({\n      id,\n      provider,\n      instance,\n      cpu: allTargets[provider].instances[instance].cpu,\n      memory: allTargets[provider].instances[instance].memory,\n    });\n  };\n\n  const instanceIsDisabled = (instance) => {\n    return unavailableInstances.includes(instance);\n  };\n\n  const handleDeleteItem = () => {\n    deleteItem(id);\n  };\n\n  return (\n    <ListItem>\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item md={2}>\n          <FormControl\n            variant=\"outlined\"\n            ref={providerDropdown}\n            className={classes.listItemDropdown}\n          >\n            <Select\n              labelId=\"provider-dropdown\"\n              id=\"provider-dropdown\"\n              value={provider}\n              onChange={handleSetProvider}\n            >\n              <MenuItem value=\"\" disabled>\n                Select Provider\n              </MenuItem>\n              {Object.keys(allTargets).map((provider) => (\n                <MenuItem key={provider} value={provider}>\n                  {provider}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item md={4}>\n          <FormControl\n            variant=\"outlined\"\n            ref={instanceDropdown}\n            className={classes.listItemDropdown}\n          >\n            <Select\n              labelId=\"instance-dropdown\"\n              id=\"instance-dropdown\"\n              value={instance}\n              onChange={handleSetInstance}\n              disabled={!provider}\n            >\n              {\" \"}\n              <MenuItem value=\"\" disabled>\n                Select Instance\n              </MenuItem>\n              {provider ? (\n                Object.keys(allTargets[provider].instances).map((instance) => {\n                  return (\n                    <MenuItem\n                      key={instance}\n                      value={instance}\n                      disabled={instanceIsDisabled(instance)}\n                    >\n                      {instance}\n                    </MenuItem>\n                  );\n                })\n              ) : (\n                <MenuItem></MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item md={1}>\n          <div className=\"cpuValue\">\n            {allTargets[provider]?.instances[instance]?.cpu ?? \"-\"}\n          </div>\n        </Grid>\n        <Grid item md={1}>\n          <div className=\"memoryValue\">\n            {allTargets[provider]?.instances[instance]?.memory ?? \"-\"}\n          </div>\n        </Grid>\n        <Grid item md={1}>\n          {disableDelete ? (\n            <></>\n          ) : (\n            <Button>\n              <CloseIcon onClick={handleDeleteItem} />\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n};\n\nexport default HardwareTargetItem;\n","import React from \"react\";\nimport HardwareTargetItem from \"./HardwareTargetItem\";\n\nimport { Divider, Grid, makeStyles } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(() => ({\n  targetsHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  listHeaders: {\n    padding: \"0 14px\",\n  },\n  targetsHeaderText: {\n    fontSize: \"12px\",\n  },\n  listItem: {\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst HardwareTargets = ({\n  hardwareTargets,\n  allInstances,\n  updateCurrentTargets,\n}) => {\n  const classes = useStyles();\n  const [canAddTarget, setCanAddTarget] = React.useState(false);\n  const [unavailableInstances, setUnavailableInstances] = React.useState([]);\n  const [currentTargets, setCurrentTargets] = React.useState([\n    {\n      id: 0,\n      provider: \"\",\n      instance: \"\",\n      cpu: 0,\n    },\n  ]);\n\n  React.useEffect(() => {\n    checkCanAddTarget();\n    updateUnavailableInstances();\n  }, [currentTargets]);\n\n  const handleUpdateCurrentTargets = (newTargets) => {\n    setCurrentTargets(newTargets);\n    const validTargets = newTargets.filter((target) => target.instance !== \"\");\n    updateCurrentTargets(validTargets);\n  };\n\n  const checkCanAddTarget = () => {\n    let i = 0;\n    while (i < currentTargets.length) {\n      if (currentTargets[i].instance === \"\") {\n        setCanAddTarget(false);\n        return;\n      }\n      i++;\n    }\n    setCanAddTarget(true);\n\n    if (currentTargets.length === allInstances.length) setCanAddTarget(false);\n  };\n\n  const updateUnavailableInstances = () => {\n    const newInstances = currentTargets.map((target) => target.instance);\n    setUnavailableInstances(newInstances);\n  };\n\n  const handleAddTarget = () => {\n    const newTargets = [\n      ...currentTargets,\n      {\n        id: 0,\n        provider: \"\",\n        instance: \"\",\n        cpu: 0,\n      },\n    ];\n    handleUpdateCurrentTargets(newTargets);\n  };\n\n  const handleUpdateTarget = (targetData) => {\n    const { id, provider, instance, cpu, memory } = targetData;\n    const newTargets = currentTargets.map((target) => {\n      if (target.id === id) {\n        return {\n          id: instance,\n          provider,\n          instance,\n          cpu,\n          memory,\n        };\n      }\n      return target;\n    });\n\n    handleUpdateCurrentTargets(newTargets);\n  };\n\n  const handleDeleteTarget = (id) => {\n    const newTargets = currentTargets.filter((target) => {\n      return target.id !== id;\n    });\n    handleUpdateCurrentTargets(newTargets);\n  };\n\n  return (\n    <>\n      <div className={classes.targetsHeader}>\n        <h4>Hardware targets</h4>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleAddTarget}\n          disabled={!canAddTarget}\n        >\n          Add\n        </Button>\n      </div>\n      <section className={classes.listHeaders}>\n        <Grid container spacing={2} justifyContent=\"space-between\">\n          <Grid item md={2}>\n            <p className={classes.targetsHeaderText}>PROVIDER</p>\n          </Grid>\n          <Grid item md={4}>\n            <p className={classes.targetsHeaderText}>INSTANCE</p>\n          </Grid>\n          <Grid item md={1}>\n            <p className={classes.targetsHeaderText}>VCPU</p>\n          </Grid>\n          <Grid item md={1}>\n            <p className={classes.targetsHeaderText}>MEMORY (GB)</p>\n          </Grid>\n          <Grid item md={1}></Grid>\n        </Grid>\n      </section>\n      <Divider />\n      <List>\n        {currentTargets.map((target, i) => (\n          <HardwareTargetItem\n            key={i}\n            targetData={target}\n            allTargets={hardwareTargets}\n            unavailableInstances={unavailableInstances}\n            handleUpdateTarget={handleUpdateTarget}\n            deleteItem={handleDeleteTarget}\n            disableDelete={i === 0}\n          />\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default HardwareTargets;\n","import React from \"react\";\nimport {\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core/\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles(() => ({\n  accordionSummary: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  benchmarkDropdown: {\n    width: \"100%\",\n  },\n}));\n\nconst BenchmarkAccordion = ({\n  hardwareData,\n  updateBenchmarkOptions,\n  confirmBenchmarkRequest,\n}) => {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n  const [benchmarkEngine, setBenchmarkEngine] = React.useState(\"\");\n  const [numberOfTrials, setNumberOfTrials] = React.useState(0);\n  const [runsPerTrial, setRunsPerTrial] = React.useState(0);\n  const [errorNumberOfTrials, setErrorNumberOfTrials] = React.useState(false);\n  const [errorRunsPerTrial, setErrorRunsPerTrial] = React.useState(false);\n  const [hardwareTarget, setHardwareTarget] = React.useState({});\n\n  React.useEffect(() => {\n    handleUpdateBenchmarkOptions();\n  }, [benchmarkEngine, hardwareTarget, numberOfTrials, runsPerTrial]);\n\n  const handleChangeCheck = (event) => {\n    event.stopPropagation();\n    setChecked(!checked);\n    confirmBenchmarkRequest(!checked);\n  };\n\n  const handleUpdateBenchmarkOptions = () => {\n    // TODO: \"Form validation\", don't allow user to submit/check option to request Benchmark\n    // if options are missing\n    const options = {\n      engine: benchmarkEngine,\n      hardware: hardwareTarget,\n      num_trials: numberOfTrials,\n      runs_per_trial: runsPerTrial,\n    };\n    updateBenchmarkOptions(options);\n  };\n\n  const handleSelectBenchmarkEngine = (event) =>\n    setBenchmarkEngine(event.target.value);\n\n  const handleChangeNumberOfTrials = (event) => {\n    const count = event.target.value;\n    if (!count.match(/^[0-9]*$/)) {\n      setErrorNumberOfTrials(true);\n    } else {\n      setErrorNumberOfTrials(false);\n      setNumberOfTrials(count);\n    }\n  };\n\n  const handleChangeRunsPerTrial = (event) => {\n    const count = event.target.value;\n    if (!count.match(/^[0-9]*$/)) {\n      setErrorRunsPerTrial(true);\n    } else {\n      setErrorRunsPerTrial(false);\n      setRunsPerTrial(count);\n    }\n  };\n\n  const handleSetHardwareTarget = (event) =>\n    setHardwareTarget(event.target.value);\n\n  return (\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked}\n              onClick={handleChangeCheck}\n              name=\"benchmark\"\n              color=\"primary\"\n            />\n          }\n        />\n        <div className={classes.accordionSummary}>\n          <b>Benchmark</b>{\" \"}\n          <p>This is some sub content to explain benchmarking</p>\n        </div>\n      </AccordionSummary>\n      <AccordionDetails>\n        <form>\n          <Grid container justifyContent=\"space-between\" spacing={1}>\n            <Grid item md={6}>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.benchmarkDropdown}\n              >\n                <InputLabel htmlFor={\"engine-dropdown\"}>Engine</InputLabel>\n                <Select\n                  labelId=\"engine-dropdown\"\n                  id=\"engine-dropdown\"\n                  value={benchmarkEngine}\n                  onChange={handleSelectBenchmarkEngine}\n                  label=\"Engine\"\n                >\n                  {\" \"}\n                  <MenuItem value={\"onyx\"}>Onyx</MenuItem>\n                  <MenuItem value={\"tvm\"}>TVM</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item md={6}>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.benchmarkDropdown}\n              >\n                <InputLabel htmlFor={\"hardware-dropdown\"}>Hardware</InputLabel>\n                <Select\n                  labelId=\"hardware-dropdown\"\n                  id=\"hardware-dropdown\"\n                  value={hardwareTarget}\n                  onChange={handleSetHardwareTarget}\n                  label=\"Hardware\"\n                >\n                  {hardwareData.map((target) => (\n                    <MenuItem key={target.instance} value={target}>\n                      {target.provider} - {target.instance} - {target.cpu} -{\" \"}\n                      {target.memory}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n\n          <Grid container justifyContent=\"space-between\" spacing={1}>\n            <Grid item>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Number of Trials\"\n                variant=\"outlined\"\n                error={errorNumberOfTrials}\n                helperText={\n                  errorNumberOfTrials ? \"Input must be a valid number\" : \"\"\n                }\n                onChange={handleChangeNumberOfTrials}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Runs per Trials\"\n                variant=\"outlined\"\n                error={errorRunsPerTrial}\n                helperText={\n                  errorRunsPerTrial ? \"Input must be a valid number\" : \"\"\n                }\n                onChange={handleChangeRunsPerTrial}\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default BenchmarkAccordion;\n","import React from \"react\";\nimport {\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core/\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  accordionSummary: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  accelerateDropdown: {\n    width: \"100%\",\n  },\n}));\n\nconst AccelerateAccordion = ({\n  hardwareData,\n  updateAccelerateOptions,\n  formData,\n  confirmAccelerateRequest,\n}) => {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n  const [engine, setEngine] = React.useState(\"\");\n  const [hardwareTarget, setHardwareTarget] = React.useState({});\n  const [showKernelTrials, setShowKernelTrials] = React.useState(false);\n  const [benchmarkError, setBenchmarkError] = React.useState(false);\n\n  React.useEffect(() => {\n    const newData = {\n      ...formData,\n      engine,\n      hardware: hardwareTarget,\n    };\n    updateAccelerateOptions(newData);\n  }, [engine]);\n\n  const handleChangeCheck = (event) => {\n    event.stopPropagation();\n    setChecked(!checked);\n    confirmAccelerateRequest(!checked);\n  };\n\n  const handleSetEngine = (event) => {\n    /* Ideally, I would send the new \"engine\" up to the parent, which would then \n        send the new state back down to this accordion, but because the type of \"engine\" \n        can change from a string to an object (depending on ONYX vs TVM), I'm managing \n        engine here in component state, and using useEffect to inform the parent the \n        engine has changed\n      */\n    const newEngine = event.target.value.toUpperCase();\n    if (newEngine === \"TVM\") {\n      setShowKernelTrials(true);\n    } else {\n      setShowKernelTrials(false);\n    }\n    setEngine(newEngine);\n  };\n\n  const handleSetKernelTrials = (event) => {\n    const trialCount = event.target.value;\n    const newData = {\n      ...formData,\n      engine: {\n        TVM: {\n          kernel_trials: trialCount,\n        },\n      },\n    };\n    updateAccelerateOptions(newData);\n  };\n\n  const handleTextfieldChange = (event) => {\n    if (!event.target.value.match(/^[0-9]*$/)) {\n      setBenchmarkError(true);\n    } else {\n      setBenchmarkError(false);\n      handleSetKernelTrials(event);\n    }\n  };\n\n  const handleSetHardwareTarget = (event) =>\n    setHardwareTarget(event.target.value);\n\n  return (\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked}\n              onClick={handleChangeCheck}\n              name=\"accelerate\"\n              color=\"primary\"\n            />\n          }\n        />\n        <div className={classes.accordionSummary}>\n          <b>Accelerate</b>\n          <p>\n            Make your models go <i>fast</i>\n          </p>\n        </div>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Grid container spacing={1}>\n          <Grid item md={4}>\n            <FormControl\n              variant=\"outlined\"\n              className={classes.accelerateDropdown}\n            >\n              <InputLabel htmlFor={\"engine-dropdown\"}>Engine</InputLabel>\n              <Select\n                labelId=\"engine-dropdown\"\n                id=\"engine-dropdown\"\n                value={engine}\n                onChange={handleSetEngine}\n                label=\"Engine\"\n              >\n                {\" \"}\n                <MenuItem value={\"ONYX\"}>Onyx</MenuItem>\n                <MenuItem value={\"TVM\"}>TVM</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          {showKernelTrials ? (\n            <Grid item md={4}>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Kernel Trials\"\n                variant=\"outlined\"\n                error={benchmarkError}\n                helperText={\n                  benchmarkError ? \"Input must be a valid number\" : \"\"\n                }\n                onChange={handleTextfieldChange}\n              />\n            </Grid>\n          ) : (\n            \"\"\n          )}\n          <Grid item md={4}>\n            <FormControl\n              variant=\"outlined\"\n              className={classes.accelerateDropdown}\n            >\n              <InputLabel id={\"hardware-dropdown\"}>Hardware</InputLabel>\n              <Select\n                labelId=\"hardware-dropdown\"\n                id=\"hardware-dropdown\"\n                value={hardwareTarget}\n                onChange={handleSetHardwareTarget}\n                label=\"Hardware\"\n              >\n                {hardwareData.map((target) => (\n                  <MenuItem key={target.instance} value={target}>\n                    {target.provider} - {target.instance} - {target.cpu} -{\" \"}\n                    {target.memory}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default AccelerateAccordion;\n","import React from \"react\";\nimport { Grid, List, ListItem, makeStyles } from \"@material-ui/core/\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(() => ({\n  totalRunsCard: {\n    padding: \"14px\",\n  },\n  totalRunsHeader: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"end\",\n  },\n  totalRunsSubHeaderText: {\n    fontSize: \"12px\",\n    fontWeight: \"bold\",\n    margin: 0,\n  },\n  totalRunsValue: {\n    margin: \"4px 0 \",\n  },\n\n  totalRunsItem: {\n    padding: \"4px 0\",\n  },\n  targetInfoCore: {\n    margin: \"2px 0\",\n    fontSize: \"12px\",\n  },\n  targetRunValue: {\n    fontWeight: \"bold\",\n    margin: 0,\n  },\n  totalRunsTargetInfo: {},\n  totalRunsGreen: {\n    color: \"#4DB396\",\n  },\n  totalRunsButton: {\n    width: \"100%\",\n  },\n}));\n\nconst TotalRuns = ({\n  currentTargets,\n  runBenchmark,\n  runAcceleration,\n  clickOctomize,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.totalRunsCard}>\n      <header className={classes.totalRunsHeader}>\n        <p className={classes.totalRunsSubHeaderText}>Total Runs: </p>\n        <h2 className={clsx(classes.totalRunsGreen, classes.totalRunsValue)}>\n          {currentTargets.length}\n        </h2>\n      </header>\n      <section>\n        {runBenchmark ? (\n          <h4 className={classes.totalRunsGreen}>* Run Benchmark *</h4>\n        ) : (\n          \"\"\n        )}\n        {runAcceleration ? (\n          <h4 className={classes.totalRunsGreen}>* Run Acceleration *</h4>\n        ) : (\n          \"\"\n        )}\n      </section>\n      <List>\n        {currentTargets.map((target) => {\n          if (target.instance !== null) {\n            return (\n              <ListItem key={target.id} className={classes.totalRunsItem}>\n                <Grid container justifyContent=\"space-between\">\n                  <Grid item>\n                    <div className={classes.totalRunsTargetInfo}>\n                      <b>{target.instance}</b>\n                      <p className={classes.targetInfoCore}>\n                        {target.cpu} cores\n                      </p>\n                    </div>\n                  </Grid>\n                  <Grid item>\n                    <p\n                      className={clsx(\n                        classes.totalRunsGreen,\n                        classes.targetRunValue\n                      )}\n                    >\n                      1\n                    </p>\n                  </Grid>\n                </Grid>\n              </ListItem>\n            );\n          } else {\n            return null;\n          }\n        })}\n      </List>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => clickOctomize()}\n        disabled={currentTargets.length === 0}\n        className={classes.totalRunsButton}\n      >\n        Octomize\n      </Button>\n    </Card>\n  );\n};\n\nexport default TotalRuns;\n","import React from \"react\";\nimport HardwareTargets from \"../components/HardwareTargets\";\nimport BenchmarkAccordion from \"../components/BenchmarkAccordion\";\nimport AccelerateAccordion from \"../components/AccelerateAccordion\";\nimport TotalRuns from \"../components/TotalRuns\";\nimport { makeStyles } from \"@material-ui/core/\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst url = \"http://netheria.takehome.octoml.ai\";\n\nconst useStyles = makeStyles(() => ({\n  box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  targetsListSection: {\n    margin: \"24px 0 0 0\",\n  },\n}));\n\nconst initialBenchmarkFormData = {\n  engine: \"\",\n  hardware: {},\n  num_trials: 0,\n  runs_per_trial: 0,\n};\n\nconst initialAccelerateFormData = {\n  engine: \"\",\n  hardware: {},\n};\n\nconst Home = () => {\n  const classes = useStyles();\n  const [isLoading, setLoading] = React.useState(true);\n  const [rawHardwareData, setRawHardwareData] = React.useState({});\n  const [hardwareTargets, setHardwareTargets] = React.useState(null);\n  const [allInstances, setAllInstances] = React.useState([]);\n  const [currentTargets, setCurrentTargets] = React.useState([]);\n  const [requestBenchmark, setRequestBenchmark] = React.useState(false);\n  const [requestAcceleration, setRequestAcceleration] = React.useState(false);\n  const [benchmarkOptions, setBenchmarkOptions] = React.useState(\n    initialBenchmarkFormData\n  );\n  const [accelerateOptions, setAccelerateOptions] = React.useState(\n    initialAccelerateFormData\n  );\n\n  async function fetchHardwareTargets() {\n    try {\n      let res = await fetch(`${url}/hardware`, {\n        method: \"GET\",\n        // mode: \"no-cors\",\n      });\n      return await res.json();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function assembleHardwareTargetsData() {\n    let data = await fetchHardwareTargets();\n\n    setRawHardwareData(data);\n    let final = {};\n\n    const addProviderInstance = (target) => {\n      final[target.provider].instances[target.instance] = {\n        name: target.instance,\n        cpu: target.cpu,\n        memory: target.memory,\n      };\n      setAllInstances((prevInstances) => [...prevInstances, target.instance]);\n    };\n\n    data.forEach((target) => {\n      if (final[target.provider]) {\n        addProviderInstance(target);\n      } else {\n        final[target.provider] = {\n          instances: {},\n        };\n        addProviderInstance(target);\n      }\n    });\n    setHardwareTargets(final);\n    setLoading(false);\n  }\n\n  React.useEffect(() => {\n    assembleHardwareTargetsData();\n  }, []);\n\n  const handleUpdateCurrentTargets = (data) => setCurrentTargets(data);\n\n  const handleUpdateBenchmarkOptions = (data) => setBenchmarkOptions(data);\n\n  const handleUpdateAccelerateOptions = (data) => setAccelerateOptions(data);\n\n  async function postOctomize() {\n    try {\n      let res = await fetch(`${url}/benchmark`, {\n        method: \"POST\",\n        body: JSON.stringify(benchmarkOptions),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        mode: \"no-cors\",\n      });\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleClickOctomize = () => {\n    postOctomize();\n  };\n\n  return (\n    <Box className={classes.box}>\n      <header>\n        <h2>Shufflenet-v2.onnx</h2>\n        <p>Created three days ago by Kevin Kim</p>\n      </header>\n      <Grid container justifyContent={\"center\"} spacing={2}>\n        <Grid item md={9}>\n          <Card>\n            <CardHeader title=\"Octomize\" />\n            <CardContent>\n              <section>\n                {isLoading ? (\n                  <h1>LOADING</h1>\n                ) : (\n                  <>\n                    <BenchmarkAccordion\n                      hardwareData={rawHardwareData}\n                      updateBenchmarkOptions={handleUpdateBenchmarkOptions}\n                      confirmBenchmarkRequest={(bool) =>\n                        setRequestBenchmark(bool)\n                      }\n                    />\n                    <AccelerateAccordion\n                      formData={accelerateOptions}\n                      updateAccelerateOptions={handleUpdateAccelerateOptions}\n                      hardwareData={rawHardwareData}\n                      confirmAccelerateRequest={(bool) =>\n                        setRequestAcceleration(bool)\n                      }\n                    />\n                  </>\n                )}\n              </section>\n              <section className={classes.targetsListSection}>\n                <div className=\"targetsList\">\n                  {isLoading ? (\n                    <h1>LOADING</h1>\n                  ) : (\n                    <HardwareTargets\n                      currentTargets={currentTargets}\n                      hardwareTargets={hardwareTargets}\n                      allInstances={allInstances}\n                      updateCurrentTargets={handleUpdateCurrentTargets}\n                    />\n                  )}\n                </div>\n              </section>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item md={3}>\n          <TotalRuns\n            currentTargets={currentTargets}\n            runBenchmark={requestBenchmark}\n            runAcceleration={requestAcceleration}\n            clickOctomize={handleClickOctomize}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Home;\n","const Benchmarks = () => {\n  return <h1>BENCHMARKS PAGE</h1>;\n};\n\nexport default Benchmarks;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./screens/Home\";\nimport Benchmarks from \"./screens/Benchmarks\";\nimport { ReactComponent as OctoLogo } from \"./logo.svg\";\n\nimport clsx from \"clsx\";\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\";\nimport { Drawer, makeStyles } from \"@material-ui/core\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  octoLogo: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginLeft: \"-15px\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    background: \"#F5F5F5\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n  const open = false;\n  return (\n    <div className={classes.root}>\n      <Router>\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <List>\n            <span className={classes.octoLogo}>\n              <OctoLogo />\n            </span>\n            <Link to=\"/\">\n              <ListItem button>\n                <ListItemIcon>\n                  <HomeIcon />\n                </ListItemIcon>\n                <ListItemText primary={\"Dashboard\"} />\n              </ListItem>\n            </Link>\n            <Link to=\"/benchmarks\">\n              <ListItem button>\n                <ListItemIcon>\n                  <EqualizerIcon />\n                </ListItemIcon>\n                <ListItemText primary={\"Benchmarks\"} />\n              </ListItem>\n            </Link>\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/benchmarks\">\n              <Benchmarks />\n            </Route>\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}